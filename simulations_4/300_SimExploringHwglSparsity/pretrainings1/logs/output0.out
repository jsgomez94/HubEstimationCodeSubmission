/nas/longleaf/home/jsgomez/github/HubEstimation/SimulationsDimRed_PaperRevision4
c0539.ll.unc.edu
Fri Apr  5 23:50:30 EDT 2024
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
This is task 0
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
a
a
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
1 Importing R and Rscript:
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
a
a
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
3 Running 200_SimWithGlassoMethods/103_PretrainingScript.R with input 0 1
Loading required package: magrittr
Loading required package: tidyverse
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.3     ✔ readr     2.1.4
✔ forcats   1.0.0     ✔ stringr   1.5.1
✔ ggplot2   3.4.4     ✔ tibble    3.2.1
✔ lubridate 1.9.3     ✔ tidyr     1.3.0
✔ purrr     1.0.2     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ tidyr::extract()   masks magrittr::extract()
✖ dplyr::filter()    masks stats::filter()
✖ dplyr::lag()       masks stats::lag()
✖ purrr::set_names() masks magrittr::set_names()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
Loading required package: testthat

Attaching package: ‘testthat’

The following object is masked from ‘package:dplyr’:

    matches

The following object is masked from ‘package:purrr’:

    is_null

The following objects are masked from ‘package:readr’:

    edition_get, local_edition

The following object is masked from ‘package:tidyr’:

    matches

The following objects are masked from ‘package:magrittr’:

    equals, is_less_than, not

Loading required package: matrixcalc
Loading required package: pracma

Attaching package: ‘pracma’

The following object is masked from ‘package:purrr’:

    cross

The following objects are masked from ‘package:magrittr’:

    and, mod, or

Loading required package: e1071

Attaching package: ‘e1071’

The following object is masked from ‘package:pracma’:

    sigmoid

Loading required package: MASS

Attaching package: ‘MASS’

The following object is masked from ‘package:dplyr’:

    select

Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:pracma’:

    expm, lu, tril, triu

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

Loading required package: RSpectra
Loading required package: spam
Spam version 2.10-0 (2023-10-23) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following object is masked from ‘package:Matrix’:

    det

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: mvtnorm

Attaching package: ‘mvtnorm’

The following objects are masked from ‘package:spam’:

    rmvnorm, rmvt

Loading required package: glasso
Loading required package: hglasso
Loading required package: igraph

Attaching package: ‘igraph’

The following object is masked from ‘package:matrixcalc’:

    %s%

The following object is masked from ‘package:testthat’:

    compare

The following objects are masked from ‘package:lubridate’:

    %--%, union

The following objects are masked from ‘package:dplyr’:

    as_data_frame, groups, union

The following objects are masked from ‘package:purrr’:

    compose, simplify

The following object is masked from ‘package:tidyr’:

    crossing

The following object is masked from ‘package:tibble’:

    as_data_frame

The following objects are masked from ‘package:stats’:

    decompose, spectrum

The following object is masked from ‘package:base’:

    union

Loading required package: plot.matrix
Loading required package: pROC
Type 'citation("pROC")' for a citation.

Attaching package: ‘pROC’

The following objects are masked from ‘package:stats’:

    cov, smooth, var

Loading required package: Ckmeans.1d.dp
Loading required package: pryr
Registered S3 method overwritten by 'pryr':
  method      from
  print.bytes Rcpp

Attaching package: ‘pryr’

The following object is masked from ‘package:igraph’:

    compose

The following object is masked from ‘package:pracma’:

    bits

The following object is masked from ‘package:dplyr’:

    where

The following objects are masked from ‘package:purrr’:

    compose, partial

 [1] ".GlobalEnv"            "package:pryr"          "package:Ckmeans.1d.dp"
 [4] "package:pROC"          "package:plot.matrix"   "package:hglasso"      
 [7] "package:igraph"        "package:glasso"        "package:mvtnorm"      
[10] "package:spam"          "package:RSpectra"      "package:Matrix"       
[13] "package:MASS"          "package:e1071"         "package:pracma"       
[16] "package:matrixcalc"    "package:testthat"      "package:lubridate"    
[19] "package:forcats"       "package:stringr"       "package:dplyr"        
[22] "package:purrr"         "package:readr"         "package:tidyr"        
[25] "package:tibble"        "package:ggplot2"       "package:tidyverse"    
[28] "package:magrittr"      "package:stats"         "package:graphics"     
[31] "package:grDevices"     "package:utils"         "package:datasets"     
[34] "package:methods"       "Autoloads"             "package:base"         
[1] "#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
[1] "#-----------------------Reading inputs"
[1] "#----------------------Verifying Inputs"
$p
[1] 20

$T0_prop
[1] 0.75

$n_prop
[1] 0.75

$r
[1] 5

$diagonal_shift
[1] 5

$ph
[1] 0.8

$pnh
[1] 0.05

$pneff
[1] 0.01

$nsim
[1] 9

$M
[1] 100

$hmin
[1] 4

$hmax
[1] 6

$nhmin
[1] 4

$nhmax
[1] 6

$neffmin
[1] 4

$neffmax
[1] 6

$shuffle
[1] FALSE

$type
[1] "unif"

$running_days
[1] 0.0138888

$threshold
[1] 2

$n
[1] 15

$T0
[1] 15

[1] "#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
[1] "#-----------------------Creating Folders"
[1] "#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
[1] "#------------------Running simulations"
[1] "The diagonal/non-diagonal treshold is: 201.948391736579"
[1] "The diagonal/non-diagonal treshold is: 6.31088724176809"
[1] "The optimal tuning is: 0.111415661004958 , 0.132951739325266 , 0.317301263218763"
[1] "The optimal tuning is: 0.045612600434637 , 0.0228063002173185 , 0.0228063002173185"
There were 50 or more warnings (use warnings() to see the first 50)
[1] "#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
[1] "#-----------------------Saving Outputs"
[1] "200_SimWithGlassoMethods/pretrainings1/data/output0.RData"
Warning messages:
1: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
2: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
3: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
4: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
5: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
6: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
7: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
8: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
9: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
10: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
11: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
12: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
13: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
14: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
15: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
16: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
17: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
18: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
19: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
20: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
21: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
22: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
23: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
24: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
25: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
26: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
27: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
28: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
29: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
30: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
31: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
32: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
33: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
34: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
35: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
36: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
37: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
38: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
39: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
40: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
41: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
42: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
43: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
44: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
45: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
46: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
47: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
48: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
49: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
50: In hgl(S[bl, bl], lambda1, lambda2, lambda3, convergence = convergence,  ... :
  The algorithm has not converged by the specified maximum number of iteration
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
a
a
Sat Apr  6 00:01:49 EDT 2024
